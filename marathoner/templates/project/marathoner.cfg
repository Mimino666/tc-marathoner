[marathoner]
# Fill all the required fields below.
# Don't put the field values into the quotes. Only when filling "solution" field (see below).

# Example of how to fill: https://github.com/Mimino666/tc-marathoner#getting-started

# (required)
# Absolute path to visualizer .jar file.
visualizer =

# (required)
# This is passed to visualizer in -exec parameter.
# Based on the programming language of your solution:
#   C++/C#:     solution = "C:\Mimino\solution.exe"
#   Java:       solution = java -cp "C:\Mimino\java\bin" Solution
#   Python:     solution = python "C:\Mimino\solution.py"
# Use quotes around the absolute paths here!
solution =

# (required)
# Absolute path to solution source code file.
# It is used when tagging and caching the solutions (see https://github.com/Mimino666/tc-marathoner#tagging-of-solutions).
source =

# (optional)
# Absolute path to file where to export the input data from visualizer, so you can later debug on them.
# Warning: if this file already exists, it will be overwritten.
testcase =

# (required)
# Whether the goal is to maximize (true) or minimize (false) the score.
# Zero score is always considered bad.
maximize = true

# (optional)
# Command line parameter for visualizer NOT to display anything (usually: -novis).
# Passed to visualizer when running multiple tests.
novis =

# (optional)
# Command line parameter for visualizer to display something (usually: -vis).
# Passed to visualizer when running single tests.
vis =

# (optional)
# Additional command line parameters for visualizer. These will be always passed to visualizer.
params =

# (required)
# If true (highly recommended), then when you run your solution on some seed,
# stdout and stderr output of the solution is saved into the file.
# Next time, when you run the same solution on the same seed again, instead of
# running your program, the cached values are used.
# It speeds things up!
cache = false
